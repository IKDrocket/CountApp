{"version":3,"sources":["Components/Counter.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","props","increment","setState","count","state","decrement","this","onClick","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAiCeA,E,kDA9BX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAMVC,UAAY,WACR,EAAKC,SAAS,CACVC,MAAO,EAAKC,MAAMD,MAAQ,KATf,EAanBE,UAAY,WACR,EAAKH,SAAS,CACVC,MAAO,EAAKC,MAAMD,MAAQ,KAb9B,EAAKC,MAAQ,CACTD,MAAO,GAHI,E,qDAoBf,OACI,gCACI,wCAAWG,KAAKF,MAAMD,SACtB,wBAAQI,QAASD,KAAKL,UAAtB,eACA,wBAAQM,QAASD,KAAKD,UAAtB,sB,GAzBMG,aCcPC,G,6KAVX,OACE,sBAAKC,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,W,GALUF,cCQHG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d9374aeb.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Counter extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            count: 0\n        };\n    }\n\n    increment = () => {\n        this.setState({\n            count: this.state.count + 1\n        });\n    };\n\n    decrement = () => {\n        this.setState({\n            count: this.state.count - 1\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <p>Count: {this.state.count}</p>\n                <button onClick={this.increment}>+</button>\n                <button onClick={this.decrement}>-</button>\n            </div>\n        )\n    }\n}\n\nexport default Counter;","import React, { Component } from 'react';\nimport Counter from './Components/Counter'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Count App</h1>\n        <Counter />\n      </div>\n\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}